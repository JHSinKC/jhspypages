<!DOCTYPE html lang="en">
<html lang="en-US">
<head>
<title>JHS2021 Python01 Bookmarks</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="stylesheet" href="css/JHS2018_Universal.css" type="text/css" media="screen">
</head>

<body text="#000033" vlink="#330066" alink="#ff0000" link="#0033cc" bgcolor="#b5e5d5">
<!-- +++++ new table of contents ++++++++++++++++++++++++++++++-------->
<ul id="menu">

<!--  START - xPython Flavors section  -------------------------------->
<li><a href="#">Python Flavors</a>
<div class="menu-container-1">

<!--  START - PyFlavors column  --------------------------------------->
<div class="column-1"><h3>Python Flavors</h3>
<ul>
<li><a href="#python.cpython">CPython 3.7.2</a></li>
<li><a href="#python.active">ActivePython</a></li>
<li><a href="#python.clpython">CLPython</a></li>
<li><a href="#python.cython">Cython</a></li>
<li><a href="#python.grumpy">Grumpy Python</a></li>
<li><a href="#python.iron">IronPython</a></li>
<li><a href="#python.ipython">IPython</a></li>
<li><a href="#python.jython">Jython</a></li>
<li><a href="#python.micro">MicroPython</a></li>
<li><a href="#python.numba">Numba Python</a></li>
<li><a href="#python.peachpy">PeachPy</a></li>
<li><a href="#python.portable">Portable Python</a></li>
<li><a href="#python.pyjion">Pyjion</a></li>
<li><a href="#python.pymite">PyMite</a></li>
<li><a href="#python.pypy">PyPy</a></li>
<li><a href="#python.pyston">Pyston</a></li>
<li><a href="#python.qpython">QPython-Android</a></li>
<li><a href="#python.stackless">Stackless Python</a></li>
<li><a href="#python.tiny">TinyPy</a></li>
</ul></div>
<!--  END - PyFlavors column  ----------------------------------------->

</div></li>
<!--  END - xPython Flavors section  ---------------------------------->

<!--  START - Programming Models section  ----------------------------->
<li><a href="#">Programming Models</a>
<div class="menu-container-1">

<!--  START - Programming Models column  ------------------------------>
<div class="column-1"><h3>Programing Models</h3>
<ul>
<li><a href="#programming.oop">Object Oreiented Design</a></li>
<li><a href="">-------------------------------</a></li>
<li><a href="#programming.functional">FUNCTIONAL Programing</a></li>
<li><a href="#python.coconut">Coconut Python</a></li>
<li><a href="#cytoolz">Cytoolz</a></li>
<li><a href="#fn.py">fn.py</a></li>
<li><a href="#funcy">funcy</a></li>
<li><a href="#toolz">Toolz</a></li>
<li><a href="">-------------------------------</a></li>
<li><a href="#programming.procedural">PROCEDURAL Progrmng</a></li>
<li><a href="">-------------------------------</a></li>
<li><a href="#programming.imperative">IMPERATIVE Programing</a></li>
<li><a href="">-------------------------------</a></li>
<li><a href="#simplecoin">'simplecoin' Blockchain</a></li>
</ul></div>
<!--  End - Programming Models column  -------------------------------->

</div></li>
<!--  END - Programming Modelsy section  ------------------------------>


<!--  START - Miscellaneous section  ---------------------------------->
<li><a href="#">Miscellaneous</a>
<div class="menu-container-1">

<!--  START - Modules column  ----------------------------------------->
<div class="column-1"><h3>Modules</h3>
<ul>
<li><a href="#doc30">30.0 Python Runtime</a></li>
<li><a href="#doc30.builtins">30.3 'builtins' Module</a></li>
<li><a href="#doc30.__main__">30.4 '__main__'</a></li>
<li><a href="#doc30.__future__">30.11 '__future__'</a></li>
<li><a href="#doc30.dataclasses">30.6 'dataclasses' Module</a></li>
<li><a href="#doc30.contextlib">30.7 'contextlib' Module</a></li>
<li><a href="#doc30.abc">30.8 'abc' Abstracts</a></li>
<li><a href="#doc30.atexit">30.9 'atexit' Module</a></li>
<li><a href="#doc30.gc">30.12 'gc' Module</a></li>
<li><a href="#doc30.inspect">30.13 'inspect' Module</a></li>
<li><a href="#doc30.site">30.14 'site' Module</a></li>
</ul></div>
<!--  END - Modules column  ------------------------------------------->

</div></li>
<!--  END - Miscellaneous section  ------------------------------------>

</ul>
<!-- +++++ END table of contents ++++++++++++++++++++++++++------------>
<br><p></p>
<!-- - <span class="update">(updated 19 Feb 99)</span> ---------------->
<hr />
<table summary="">
<tbody>
<tr><p></p><p></p>
<a href="#top"><img height="40" alt="Go to the Top" src="images/UpArrow.jpg" width="30" /></a></td>
<td>
<p class="head2"><a id="python.c">'C' Python 3.7.x</a>
<br>
<a class="semanticweb">Version: 3.7.2  Released: Dec 24, 2018</a>
<a class="newhtml5">no warnings</a>
</p></td>
</tr>
</tbody>
</table>

<div class="elementheader">Reference</div>
<div class="elementdescription">
| <a href="" target="_blank">[dos cmd] <kbd>python -m pydoc -b</kbd></a>
| <a href="http://devdocs.io/python~3.7/" target="_blank">3.7docs</a>
| <a href="https://docs.python.org/3.7/library/index.html" target="_blank">3.7docs</a>
| <a href="https://wiki.python.org/moin/" target="_blank">Python Wiki</a>
| <a href="https://docs.python.org/3.7/glossary.html#glossary" target="_blank">Python Glossary</a>
| <a href="https://www.python.org/dev/peps/pep-0008/" target="_blank">PEP 8 Style Guide</a>
|<br />
| <a href="https://docs.python.org/3/reference/index.html#reference-index" target="_blank">Python Language Reference</a>
| <a href="https://docs.python.org/3/library/index.html#library-index" target="_blank">Python Standard Library</a>
| <a href="https://docs.python.org/3.7/py-modindex.html" target="_blank">Python Module Index</a>
| <a href="https://pypi.org/" target="_blank">Py Package Index</a>
|<br />
| <a href="https://ehmatthes.github.io/pcc/cheatsheets/README.html" target="_blank">GitHub CheatSheet</a>
| <a href="https://www.codeconquest.com/language-cheat-sheets/python-cheat-sheet/" target="_blank">CC CheatSheet</a>
| <a href="http://openbookproject.net/thinkcs/python/english3e/genindex.html" target="_blank">
How to Think Like a Computer Scientist: Learning with Python3</a>
|<br />
| <a href="https://readthedocs.org/" target="_blank">Read the Docs</a>
|</div>

<p></p>
<div class="elementheader">Tutorials</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>

<div class="elementheader">Tutorials on YouTube</div>
<div class="elementdescription">
| <a href="" target="_blank">C</a>
| <a href="" target="_blank">P</a>
|</div>

<p></p>
<div class="elementheader">Forum Answers</div>
<div class="elementdescription">
| <a href="http://python-forum.io/" target="_blank">Python Forum (johnhsneed; Python2018)</a>
| <a href="http://groups.google.com/forum/#!forum/pythonforum" target="_blank">Google Groups</a>
| <a href="http://stackoverflow.com/" target="_blank">StackOverflow</a>
| <a href="http://github.com/pypa" target="_blank">PyPI on GitHub</a>
| <a href="http://recalll.co/?q=python" target="_blank">Recall</a>
|<br />
| <a href="http://bitbucket.org/pypy/pypy" target="_blank">Bitbucket</a>
|
</div>

<ol>
<li>
<a class="listitem" href="http://zetcode.com/" target="_blank">ZetCode</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>

<li>
<a class="listitem" href="http://www.python.org/" target="_blank">Python.Org</a>
 - <span class="update">id=""; pw="python2018"  (visited 12 May 18)</span>
</li>
<li>
<a class="listitem" href="http://docs.python.org/3.7/py-modindex.html" target="_blank">PSL (Python Standard Library)</a>
 - <span class="update">x,000 modules  (visited 12 Jun 18)</span>
</li>
<li>
<a class="listitem" href="http://pypi.org/" target="_blank">PyPI (Python Package Index)</a>
 - <span class="update">90,000 modules  (visited 12 Jun 18)</span>
</li>
<li>
<a class="listitem" href="http://www.pythoncentral.io/" target="_blank">Python Central</a>
 - <span class="update">(visited 22 May 18)</span>
</li>
<li>
<a class="listitem" href="http://www.pythonforbeginners.com/" target="_blank">Python For Beginners</a>
 - <span class="update">(visited 22 May 18)</span>
</li>
<li>
<a class="listitem" href="http://www.py4e.com/" target="_blank">Python For Everybody</a>
 - <span class="update">(visited 22 May 18)</span>
</li>
<li>
<a class="listitem" href="http://www.openbookproject.net/py4fun/" target="_blank">Python For Fun</a>
 - <span class="update">(visited 17 Dec 18)</span>
</li>
<li>
<a class="listitem" href="https://code.tutsplus.com/articles/python-from-scratch-object-oriented-programming--net-21476" target="_blank">Python from Scratch</a>
 - <span class="update">(visited 22 Jun 18)</span>
</li>
<li>
<a class="listitem" href="http://thepythonguru.com/" target="_blank">Python Guru</a>
 - <span class="update">(visited 18 June 18)</span>
</li>
<li>
<a class="listitem" href="http://www.pythontic.com/" target="_blank">Pythontic.com</a>
 - <span class="update">(visited 09 Sep 18)</span>
</li>
<li>
<a class="listitem" href="http://www.pythonlake.com/" target="_blank">Python Lake</a>
 - <span class="update">(visited 02 Sep 18)</span>
</li>
<li>
<a class="listitem" href="http://pythonpracticeprojects.com/" target="_blank">Python Practice Projects</a>
 - <span class="update">(visited 30 Dec 18)</span>
</li>
<li>
<a class="listitem" href="https://pymotw.com/" target="_blank">Python 3 Module of the Week</a>
 - <span class="update">(visited 12 May 18)</span>
</li>
<li>
<a class="listitem" href="http://book.pythontips.com/en/latest/" target="_blank">Python Tips book</a>
 - <span class="update">(visited 15 Sep 18)</span>
</li>
<li>
<a class="listitem" href="http://www.pythontutor.com/" target="_blank">Python Tutor</a>
 - <span class="update">(visited 15 Jun 18)</span>
</li>
<li>
<a class="listitem" href="https://python101.pythonlibrary.org/" target="_blank">Python 101</a>
 - <span class="update">(visited 11 Jul 18)</span>
</li>
<li>
<a class="listitem" href="https://code.activestate.com/recipes/langs/python/" target="_blank">activestate: Popular Python recipes</a>
 - <span class="update">(visited 22 May 18)</span>
</li>
<li>
<a class="listitem" href="https://automatetheboringstuff.com/" target="_blank">Automate the Boring Stuff</a>
 - <span class="update">(visited 22 May 18)</span>
</li>
<li>
<a class="listitem" href="https://wiki.python.org/moin/BeginnersGuide/Programmers" target="_blank">Beginners Guide to Python Programming</a>
  - <span class="update">(visited 12 May 18) </span>
</li>
<li>
<a class="listitem" href="https://python.swaroopch.com/" target="_blank">Byte of Python</a>
 - <span class="update">(visited 30 Dec 18)</span>
</li>
<li>
<a class="listitem" href="https://www.codecademy.com/" target="_blank">Code Academy</a>
 - <span class="update">ID=johnhsneed@gmail.com; PW=python2018  (visited 12 May 18)</span>
</li>
<li>
<a class="listitem" href="https://www.codeconquest.com/" target="_blank">Code Conquest</a>
 - <span class="update"> (visited 22 May 18)</span>
</li>
<li>
<a class="listitem" href="https://codeinpython.com/" target="_blank">Code in Python</a>
 - <span class="update"> (visited 05 Sep 18)</span>
</li>
<li>
<a class="listitem" href="http://cscircles.cemc.uwaterloo.ca/" target="_blank">University of Waterloo</a>
 - <span class="update">id=JHSinKC; pw=Python2018 (visited 28 Sep 18)</span>
</li>
<li>
<a class="listitem" href="https://data-flair.training/blogs/category/python/" target="_blank">Data Flair</a>
 - <span class="update"> (visited 09 Sep 18)</span>
</li>
<li>
<a class="listitem" href="http://www.diveintopython3.net/" target="_blank">Dive Into Python 3</a>
 - <span class="update"> (visited 12 Jun 18)</span>
</li>
<li>
<a class="listitem" href="http://eric-ide.python-projects.org/" target="_blank">Eric IDE</a>
 - <span class="update">(visited 22 May 18)</span>
</li>
<li>
<a class="listitem" href="http://www.fullstackpython.com" target="_blank">Full Stack Python</a>
 - <span class="update">(visited 22 May 18)</span>
</li>
<li>
<a class="listitem" href="https://www.geeksforgeeks.org/python-programming-language/" target="_blank">GeeksForGeeks</a>
 - <span class="update">(visited 18 May 18)</span>
</li>
<li>
<a class="listitem" href="https://www.guru99.com/python-tutorials.html" target="_blank">Guru99</a>
 - <span class="update">(visited 22 Jun 18)</span>
</li>
<li>
<a class="listitem" href="http://thehelloworldprogram.com/python/" target="_blank">thehelloworldprogram</a>
 - <span class="update">(visited 22 Sep 18)</span>
</li>
<li>
<a class="listitem" href="http://docs.python-guide.org/en/latest/" target="_blank">Hitchhiker’s Guide to Python</a>
 - <span class="update">(visited 22 May 18)</span>
</li>
<li>
<a class="listitem" href="https://interactivepython.org/runestone/static/thinkcspy/index.html" target="_blank">Interactive Python</a>
 - <span class="update">(visited 22 Jun 18)</span>
</li>

<li>
<a class="listitem" href="http://www.network-theory.co.uk/docs/pytut/index.html" target="_blank">Introduction to Python--Rossum</a>
 - <span class="update">(visited 22 May 18)</span>
</li>
<li>
<a class="listitem" href="https://linuxconfig.org/" target="_blank">Linux Config</a>
 - <span class="update">(visited 12 May 18)</span>
</li>
<li>
<a class="listitem" href="https://www.learnpython.org/" target="_blank">Learn Python</a>
 - <span class="update">(visited 12 May 18)</span>
</li>
<li>
<a class="listitem" href="https://learncodethehardway.org/" target="_blank">Learn Python 3 The Hard Way</a>
 - <span class="update">(visited 12 May 18)</span>
</li>
<li>
<a class="listitem" href="https://learnxinyminutes.com/docs/python3/" target="_blank">Learn X in Y Minutes</a>
 - <span class="update">(visited 30 Dec 18)</span>
</li>
<li>
<a class="listitem" href="http://www.openbookproject.net/books/bpp4awd/index.html" target="_blank">Open Book Project</a>
 - <span class="update">(visited 16 Jun 18)</span>
</li>
<li>
<a class="listitem" href="https://www.programiz.com/python-programming" target="_blank">Programiz</a>
 - <span class="update">(visited 16 Jun 18)</span>
</li>
<li>
<a class="listitem" href="https://realpython.com/" target="_blank">Real Python</a>
 - <span class="update">(visited 06 Jul 18)</span>
</li>
<li>
<a class="listitem" href="https://scotch.io/tag/python" target="_blank">Scotch.io\Python</a>
 - <span class="update">(visited 06 Jul 18)</span>
</li>
<li>
<a class="listitem" href="http://stackabuse.com/tag/python/" target="_blank">StackAbuse</a>
 - <span class="update">(visited 02 Jul 18)</span>
</li>
<li>
<a class="listitem" href="http://en.wikibooks.org/wiki/Python_Programming" target="_blank">Wikibooks: Python Programming</a>
 - <span class="update">(visited 14 Jun 18)</span>
</li>
<li>
<a class="listitem" href="http://en.wikiversity.org/wiki/Python_Programming" target="_blank">Wikiversity: Python Programming</a>
 - <span class="update">(visited 14 Jun 18)</span>
</li>
<li>
<a class="listitem" href="https://www.wisdomjobs.com/e-university/python-tutorial-176/handling-tkinter-events-8777.html" target="_blank">WisdomJobs</a>
 - <span class="update">(visited 30 Aug 18)</span>
</li>
<li>
<a class="listitem" href="https://www.coursera.org/learn/python" target="_blank">Coursera: Python</a>
 - <span class="update">University of Michigan</span>
</li>
<li>
<a class="listitem" href="https://www.pythonanywhere.com" target="_blank">PythonAnywhere</a>
 - <span class="update">Host, run, and code Python in the cloud!</span>
</li>
<li>
<a class="listitem" href="http://code.activestate.com/recipes/langs/python/tags/meta:min_python_3/" target="_blank">ActiveState</a>
 - <span class="update"></span>
</li>
<li>
<a class="listitem" href="" target="_blank">Book: Byte of Python_Swarooopch_2003[*161]</a>
 - <span class="update">Finished: 23 Jul 18</span>
</li>
<li>
<a class="listitem" href="" target="_blank">Book: How to Code in Python_Lisa_2018[378-459]</a>
 - <span class="update">Currently reading:  id="johnhsneed@gmail.com"; pw="python2018" 23 Aug 18</span>
</li>
</ol>
<p></p>

<div class="faqdescription">On The Hot Seat</div>
<ol>
    <li>
<a class="listitem" href="https://pycoders.com/" target="_blank">PyCoders Weekly</a>
 - <span class="update">(visited 21 Jan 19)</span>
</li>
<li>
<a class="listitem" href="https://www.python.org/events/python-events/591/" target="_blank">PyCon 2019 (Cleveland)</a>
 - <span class="update">(visited 21 Jan 19)</span>
</li>
<li>
<a class="listitem" href="https://www.youtube.com/results?search_query=pycon+2018+tutorials" target="_blank">PyCon 2018 on YouTube</a>
 - <span class="update">(visited 21 Jan 19)</span>
</li>
<li>
<a class="listitem" href="https://medium.mybridge.co/learn-python-from-top-50-articles-for-the-past-year-v-2019-3225f4643d9c" target="_blank">mybridge: Learn Python from Top 50 Articles for the Past Year (v.2019)</a>
 - <span class="update">(visited 08 Jan 19)</span>
</li>
<li>
<a class="listitem" href="https://medium.freecodecamp.org/want-to-build-something-fun-heres-a-list-of-sample-web-app-ideas-b991bce0ed9a" target="_blank">freecodecamp: list of sample web app ideas</a>
 - <span class="update">(visited 08 Jan 19)</span>
</li>
<li>
<a class="listitem" href="https://codeburst.io/the-2018-web-developer-roadmap-826b1b806e8d" target="_blank">codeburst: The 2018 Web Developer Roadmap</a>
 - <span class="update">(published 22 Jan 18)</span>
</li>
<li>
<a class="listitem" href="https://www.udemy.com/learn-python-build-a-virtual-assistant-in-python/?ranMID=39197&ranEAID=JVFxdTr9V80&ranSiteID=JVFxdTr9V80-zU3O7biEeF72PnbG4OqN.A&LSNPUBID=JVFxdTr9V80" target="_blank">udemy: Learn Python: Build a Virtual Assistant </a>
 - <span class="update">(visited 21 Jan 19)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 19)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 19)</span>
</li>
</ol>
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<hr />
<p></p>
<p></p>

<table summary="">
<tbody>
<tr>
<td>
<p></p><p></p>
<a href="#top"><img height="40" alt="Go to the Top" src="images/UpArrow.jpg" width="30" /></a></td>
<td><p class="head2"><a id="python.ipython">Ipython</a><br>
<a class="semanticweb">Version: 7.2.0  Released: Nov 30, 2018</a>
<a class="newhtml5">no warnings</a></p></td>
</tr>
</tbody>
</table>

<div class="faqdescription">It is a python prompt on steroids. It has completion, history, shell capabilities, and a lot more. Make sure that you take a look at it.</div>

<div class="elementheader">Reference</div>
<div class="elementdescription">
| <a href="https://github.com/ipython/ipython-website" target="_blank">github: ipython</a>
| <a href="https://ipython.readthedocs.io/en/stable/" target="_blank">readthedocs: ipython</a>
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials on YouTube</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>

<ol>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
</ol>

<div class="propertyheader"></div>
<div class="propertydescription"></div>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<hr />
<p></p>
<p></p>

<table summary="">
<tbody>
<tr>
<td>
<p></p><p></p>
<a href="#top"><img height="40" alt="Go to the Top" src="images/UpArrow.jpg" width="30" /></a></td>
<td><p class="head2"><a id="python.iron">Iron Python</a><br>
<a class="semanticweb">Version:  Released: Nov 30, 2018</a>
<a class="newhtml5">no warnings</a></p></td>
</tr>
</tbody>
</table>

<div class="faqdescription"></div>

<div class="elementheader">Reference</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials on YouTube</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>

<ol>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
</ol>

<div class="propertyheader"></div>
<div class="propertydescription"></div>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<hr />
<p></p>
<p></p>

<table summary="">
<tbody>
<tr>
<td>
<p></p><p></p>
<a href="#top"><img height="40" alt="Go to the Top" src="images/UpArrow.jpg" width="30" /></a></td>
<td><p class="head2"><a id="python.qpython">QPython3</a><br>
<a class="semanticweb">Version: 2.4.2  Released: Sep 26, 2018</a>
<a class="newhtml5">no warnings</a></p></td>
</tr>
</tbody>
</table>

<div class="faqdescription">QPython is a program engine that runs Python script on your Android devices. It contains the Python interpreter, editor, QPYPI, QRCode reader and some amazing features for Android.</div>

<div class="elementheader">Reference</div>
<div class="elementdescription">
| <a href="https://play.google.com/store/apps/details?id=org.qpython.qpy3" target="_blank">google Play: QPython3 - Python3 for Android</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials on YouTube</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|

<!----- TechMond: Qpython For Android --------------------------------->
<li>
[TechMond: Qpython For Android] <a href="https://www.youtube.com/playlist?list=PLoqGKGzSZw0dPCrpVnoKxbKo0Ceemg5nC" target="_blank">Playlist</a>
| <a href="https://www.youtube.com/watch?v=fb_DVMdHfSE&t=0s&list=PLoqGKGzSZw0dPCrpVnoKxbKo0Ceemg5nC&index=2" target="_blank">01 install</a>
| <a href="https://www.youtube.com/watch?v=hfMm4W6P1ew&t=0s&list=PLoqGKGzSZw0dPCrpVnoKxbKo0Ceemg5nC&index=3" target="_blank">02 overview</a>
| <a href="https://www.youtube.com/watch?v=eUrVzsa_LM0&t=0s&list=PLoqGKGzSZw0dPCrpVnoKxbKo0Ceemg5nC&index=4" target="_blank">03 print()</a>
|<br /><span>--&gt;</span>
| <a href="https://www.youtube.com/watch?v=NCjog9vATIE&t=0s&list=PLoqGKGzSZw0dPCrpVnoKxbKo0Ceemg5nC&index=37" target="_blank">36 create mod</a>
|</li>
<!----- TechMond: Qpython For Android --------------------------------->
</div>
<p></p>

<div class="elementheader">Tutorials</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>

<ol>
<li>
<a class="listitem" href="https://www.qpython.com/" target="_blank">QPython - Python on Android</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
</ol>

<div class="propertyheader"></div>
<div class="propertydescription"></div>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<hr />
<p></p>
<p></p>

<table summary="">
<tbody>
<tr>
<td>
<p></p><p></p>
<a href="#top"><img height="40" alt="Go to the Top" src="images/UpArrow.jpg" width="30" /></a></td>
<td><p class="head2"><a id="python.pypy">PyPy Interpreter</a></p></td>
</tr>
</tbody>
</table>

<div class="faqdescription">PyPy is an interpreter that implements the Python programming language, based on the RPython compiler framework for dynamic language implementations.</div>

<div class="elementheader">Reference</div>
<div class="elementdescription">
| <a href="http://doc.pypy.org/en/latest/" target="_blank">PyPy documentation</a>
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials on YouTube</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>

<ol>
<li>
<a class="listitem" href="https://pypy.org/" target="_blank">PyPy.org</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
</ol>

<div class="propertyheader"></div>
<div class="propertydescription"></div>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<hr />
<table summary="">
<tbody>
<tr>
<p></p><p></p>
<td><a href="#top"><img height="40" alt="Go to the Top" src="images/UpArrow.jpg" width="30" /></a></td>
<td><p class="head2"><a id="programming.oop">Object-Oriented Programming (OOP) Model</a><br>
<a class="newhtml5">no warnings</a></p></td>
</tr>
</tbody>
</table>

<div class="faqdescription">Object-oriented programs manipulate collections of objects. Objects have internal state and support methods that query or modify this internal state in some way.<br>
OOP relies on data fields that are treated as objects and manipulated only through prescribed methods. Python doesn’t fully support this paradigm because it can’t implement features such as data hiding (encapsulation), which many believe is a primary requirement of the object-oriented programming paradigm. This coding style also favors code reuse.</div>

<div class="elementheader">Reference</div>
<div class="elementdescription">
| <a href="https://docs.python.org/3/tutorial/classes.html" target="_blank">python.org</a>
| <a href="https://github.com/faif/python-patterns" target="_blank">Github: design patterns/idioms</a>
| <a href="https://www.toptal.com/python/python-design-patterns" target="_blank">Boyanov: design patterns</a>
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials on YouTube</div>
<div class="elementdescription">
| <a href="https://www.youtube.com/watch?v=apACNr7DC_s&list=PLi01XoE8jYohWFPpC17Z-wWhPOSuh8Er-&index=23" target="_blank">Socratica</a>*
| <a href="https://realpython.com/lessons/what-object-oriented-programming-oop/" target="_blank">realpython: overview</a>*
| <a href="https://realpython.com/lessons/classes-python/" target="_blank">realpython: classes</a>*
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
| <a href="" target="_blank"></a>

<!-----  Corey Schafer: Python OOP tutorial ---------------------------->
<li>
[Corey: Python OOP] <a href="https://www.youtube.com/playlist?list=PL-osiE80TeTsqhIuOqKhwlXsIBIdSeYtc" target="_blank">Playlist</a>
| <a href="https://www.youtube.com/watch?v=ZDa-Z5JzLYM&list=PL-osiE80TeTsqhIuOqKhwlXsIBIdSeYtc&index=1" target="_blank">01 Classes-Instances</a>*
| <a href="https://www.youtube.com/watch?v=BJ-VvGyQxho&list=PL-osiE80TeTsqhIuOqKhwlXsIBIdSeYtc&index=2" target="_blank">02 Class Variables</a>*
| <a href="https://www.youtube.com/watch?v=rq8cL2XMM5M&list=PL-osiE80TeTsqhIuOqKhwlXsIBIdSeYtc&index=3" target="_blank">03 class-staticmethods</a>*
|<br /><span>--&gt;</span>
| <a href="https://www.youtube.com/watch?v=RSl87lqOXDE&list=PL-osiE80TeTsqhIuOqKhwlXsIBIdSeYtc&index=4" target="_blank">04 Subclasses</a>*
| <a href="https://www.youtube.com/watch?v=3ohzBxoFHAY&list=PL-osiE80TeTsqhIuOqKhwlXsIBIdSeYtc&index=5" target="_blank">05 Dunders</a>*
| <a href="https://www.youtube.com/watch?v=jCzT9XFZ5bw&list=PL-osiE80TeTsqhIuOqKhwlXsIBIdSeYtc&index=6" target="_blank">06 Getters, Setters, and Deleters</a>*
|</li>
<!-----  Corey Schafer: Python OOP Tutorial ---------------------------->

</div>
<p></p>

<div class="elementheader">Tutorials</div>
<div class="elementdescription">
| <a href="https://www.learnpython.org/en/Classes_and_Objects" target="_blank">LearnPython: classes-objects</a>*
 | <a href="https://www.learnpython.org/en/Modules_and_Packages" target="_blank">LearnPython: modules-packages</a>*
| <a href="https://realpython.com/python3-object-oriented-programming/" target="_blank">RealPython: OOP</a>*
| <a href="https://www.digitalocean.com/community/tutorials/how-to-construct-classes-and-define-objects-in-python-3" target="_blank">DigitalOcean: classes</a>*
 <br>
| <a href="https://www.programiz.com/python-programming/object-oriented-programming" target="_blank">programiz: OOP</a>*
| <a href="http://zetcode.com/lang/python/oop/" target="_blank">zetcode: OOP</a>
| <a href="https://www.python-course.eu/python3_object_oriented_programming.php" target="_blank">python-course.eu: OOP</a>

| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>

|</div>
<p></p>

<ol>
<li>
<a class="listitem" href="http://www.debreuil.com/docs/ch01_Intro.htm" target="_blank">debreuil</a>
- <span class="update">(visited 10 Mar 14)</span>
</li>
<li>
<a class="listitem" href="http://en.wikipedia.org/wiki/Object-oriented_programming" target="_blank">Wikipedia</a>
- <span class="update">(visited 10 Mar 14)</span>
</li>
<li>
<a class="listitem" href="https://inventwithpython.com/blog/2014/12/02/why-is-object-oriented-programming-useful-with-a-role-playing-game-example/" target="_blank">Sweigart: Why is OOP useful?</a>
 - <span class="update">(published 02 Dec 14)</span>
</li>
<li>
<a class="listitem" href="https://python.g-node.org/python-summerschool-2013/_media/wiki/oop/oo_design_2013.pdf" target="_blank">Wilbert: Object Oriented Design</a>
 - <span class="update">(published 20 Jun 13)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
</ol>

<div class="faqheader">The '__init__' constructor.</div>
<div class="faqdescription">The first method called when instantiating a new object.</div>
<p></p>

<div class="faqheader">What is 'self'?</div>
<div class="faqdescription">Self is a convention and not a real python keyword. 'self' is a parameter in a function (you are permitted to use any other name for this parameter). When defining an instance method, the first parameter of the method should always be self. </div>
<div class="faqheader">What is 'cls'?</div>
<div class="faqdescription">'cls' is a parameter representing the class-level object. When defining @classmethod or @staticmethod, the first parameter of the method should always be 'cls'. </div>
<p></p>

<div class="faqheader">What is @classmethod</div>
<div class="faqdescription"></div>
<div class="faqheader">What is @staticmethod</div>
<div class="faqdescription"></div>
<p></p>

<div class="faqheader">Objects</div>
<div class="faqdescription">The active elements of an OO program. Objects are of a definite type (their class, and possibly some other interface) and have two parts: what they know (attributes) and what they can do (behavior). They occupy memory, they get work done, they have a unique id.</div>
<div class="faqheader">Classes</div>
<div class="faqdescription">The templates from which objects can be instantiated. The definition of the class determines what objects of that class can know and do. Classes themselves are passive (compared to objects at least, and if you ignore class members).</div>
<div class="faqheader">Encapsulation</div>
<div class="faqdescription">
| <a href="http://arcanecode.com/2007/02/08/object-oriented-programming-pillar-1-encapsulation/" target="_blank">ArcaneCode</a>
| <a href="" target="_blank">L</a>
|<br />
Instead of "encapsulation", substitute “self contained”. Your classes should be like a little black box. You can rewire the inside all you want, as long as the end results to the outside world look the same.<br />
The idea that an object encapsulates knowledge and behavior. We control what outsiders may see with access control.  Generally, the internal state of an object is hidden from other objects. The algorithms used in the definition of the class methods are hidden by the class. Includes the idea of containment as an essential relationship between classes.</div>
<div class="faqheader">Inheritance</div>
<div class="faqdescription">
| <a href="http://arcanecode.com/2007/02/09/object-oriented-programming-pillar-2-inheritance/" target="_blank">ArcaneCode</a>
| <a href="" target="_blank">L</a>
|<br />
Classes may be related to each other in an inheritance hierarchy. Top level, abstract classes tend not to be instantiated into active, living, breathing objects. They serve to gather together the common attributes and behavior which their concrete subclasses inherit.</div>
<div class="faqheader">Messaging</div>
<div class="faqdescription">Messages are what gets work done in an OO system. There are four parts to a message: a receiver object, a method name, optional method arguments, and an optional return value.</div>
<div class="faqheader">Identity</div>
<div class="faqdescription">Objects must have a unique identity, knowledge of which is required to send an object a message. Pointers give us aliases for the unique names of objects, and confuse the issue of identity.</div>
<div class="faqheader">Polymorphism</div>
<div class="faqdescription">
| <a href="http://arcanecode.com/2007/02/12/object-oriented-programming-pillar-3-polymorphism/" target="_blank">ArcaneCode</a>
| <a href="" target="_blank">L</a>
|<br>
Inheritance allows us to go from something generic, like an Employee, to something more specific, like a Manager or Peon. Polymorphism allows us to go in the reverse direction, treating something specific as something more generic.<br />
The idea that the code that is executed as the result of a message being sent depends on the class of the object that receives the message. Objects of different classes can react differently to being sent the same method in a message.<br>
Polymorphic classes typically have the same interfaces (i.e. methods, attributes), but they are not aware of each other.</div>
<div class="faqheader"> Type</div>
<div class="faqdescription">What determines the capabilities or behavior of a thing, such as an object. Distinct from, but often confused with, class. Type is equivalent to the interface of a class. Programming to types, not classes, maintains flexibility.</div>
<p></p>

<div class="propertyheader">WARNING: use care with "from x import * "</div>
<div class="propertydescription">
<ul>
<li>Because it puts a lot of stuff into your namespace (might shadow some other object from previous import and you won't know about it).</li>
<li>Because you don't know exactly what is imported and can't easily find from which module a certain thing was imported (readability).</li>
<li>Because you can't use cool tools like pyflakes to statically detect errors in your code.</li>
</ul>
To highlight a risk: import * makes the order of the import statements significant... even for standard library modules that don't normally care about import order. Something as innocent as alphabetizing your import statements could break your script when a former casualty of the import war becomes the sole survivor. </div>
<p></p>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<hr />
<p></p>
<p></p>

<table summary="">
<tbody>
<tr>
<td>
<p></p><p></p>
<a href="#top"><img height="40" alt="Go to the Top" src="images/UpArrow.jpg" width="30" /></a></td>
<td><p class="head2"><a id="programming.functional">Functional Programming Model</a><br>
<a class="newhtml5">no warnings</a>
</p></td>
</tr>
</tbody>
</table>

<div class="faqdescription">Functional programming (inputs--&gt;outputs) decomposes a problem into a set of functions. Ideally, functions only take inputs and produce outputs, and don’t have any internal state that affects the output produced for a given input. Functional programming can be considered the opposite of object-oriented programming.<br>
Functional style discourages functions with side effects that modify internal state or make other changes that aren’t visible in the function’s return value. Functions that have no side effects at all are called purely functional. Avoiding side effects means not using data structures that get updated as a program runs; every function’s output must only depend on its input.</div>

<div class="faqheader">map() function</div>
<div class="faqdescription"><kbd>map(function_name, data_list/tuple)</kbd> creates the map object<br>
<kbd>my_list(map(area, radii))</kbd> calls the map function and returns my_list[].<br>
| <a href="https://www.youtube.com/watch?v=hUes6y2b--0&index=27&list=PLi01XoE8jYohWFPpC17Z-wWhPOSuh8Er-" target="_blank">Socratica</a> |</div>
<p></p>
<div class="faqheader">filter() function</div>
<div class="faqdescription"><kbd>filter(lambda function, data_list/tuple)</kbd> creates the filter object<br>
<kbd>my_list(filter(lambda x: x > avg, data))</kbd> calls the filter function and returns my_list[].<br>
| <a href="https://www.youtube.com/watch?v=hUes6y2b--0&index=27&list=PLi01XoE8jYohWFPpC17Z-wWhPOSuh8Er-" target="_blank">Socratica</a> |</div>
<p></p>
<div class="faqheader">reduce() function  (*part of 'functools')</div>
<div class="faqdescription">good luck!!</div>
<p></p>

<div class="propertyheader">Memoization</div>
<div class="propertydescription">
<br>| <a href="https://mike.place/2016/memoization/" target="_blank">Mike</a> | <a href="https://www.python-course.eu/python3_memoization.php" target="_blank">CourseEU</a> |</div>
<p></p>
<div class="propertyheader">Decorators</div>
<div class="propertydescription">
<br>| <a href="https://www.python-course.eu/python3_decorators.php" target="_blank">CourseEU</a> | </div>
<p></p>
<div class="propertyheader">Generators</div>
<div class="propertydescription">Generators are a simple and powerful tool for creating iterators. They are written like regular functions but use the yield statement whenever they want to return data. Each time next() is called on it, the generator resumes where it left off (it remembers all the data values and which statement was last executed).</div>
<p></p>

<div class="elementheader">Reference</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials on YouTube</div>
<div class="elementdescription">
| <a href="https://www.youtube.com/watch?v=25ovCm9jKfA&index=26&list=PLi01XoE8jYohWFPpC17Z-wWhPOSuh8Er-" target="_blank">Socratica</a>
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>

<ol>
<li>
<a class="listitem" href="https://medium.freecodecamp.org/how-and-why-you-should-use-python-generators-f6fb56650888" target="_blank">How+why you should use Python Generators</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="https://wiki.python.org/moin/Generators" target="_blank">PythonWiki: Generators</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="https://thepythonguru.com/python-generators/" target="_blank">Python Guru: Generator Tutorial</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
</ol>

<div class="propertyheader">Lambda Function</div>
<div class="propertydescription">Lambda functions are small functions usually not more than a line. It can have any number of arguments just like a normal function. The body of lambda functions is very small and consists of only one expression. The result of the expression is the value when the lambda is applied to an argument. Also there is no need for any return statement in lambda function.<br>
<kbd>r = lambda x, y: x * y</kbd><br>
<kbd>r(12, 3)   # call the lambda function</kbd></div>
<p></p>

<div class="propertyheader">Interation</div>
<div class="propertydescription">A general term for taking each item of something, one after another. Any time you use a loop, explicit or implicit, to go over a group of items, that is iteration.</div>
<p></p>

<div class="propertyheader">An ITERABLE</div>
<div class="propertydescription">
<ul>
<li>anything that can be looped over (strings, file)</li>
<li>anything that can appear on the right-side of a for-loop: for x in iterable: </li>
<li>anything you can call with iter() that will return an ITERATOR: iter(obj)</li>
<li>an object that defines __iter__ that returns a fresh ITERATOR,</li>
<li>an object that has a __getitem__ method that can take sequential indexes starting from zero (and raises an IndexError when the indexes are no longer valid)</li>
</ul>
</div>
<p></p>

<div class="propertyheader">An ITERATOR</div>
<div class="propertydescription">
| <a href="https://docs.python.org/3/tutorial/classes.html#iterators" target="_blank">9.8. Iterators</a>
| <a href="https://docs.python.org/dev/library/stdtypes.html#iterator-types" target="_blank">Iterator types</a>
 | <a href="http://www.diveintopython3.net/iterators.html" target="_blank">diveintopython3: iterators</a>
<ul>
<li>with state that remembers where it is during iteration,</li>
<li>with a __next__ method that:</li>
<ul>
<li>returns the next value in the iteration</li>
<li>updates the state to point at the next value</li>
<li>signals when it is done by raising StopIteration</li>
</ul>
<li>that is self-iterable (meaning that it has an __iter__ method that returns self).</li>
</ul></div>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<hr />
<p></p>
<p></p>

<table summary="">
<tbody>
<tr>
<td>
<p></p><p></p>
<a href="#top"><img height="40" alt="Go to the Top" src="images/UpArrow.jpg" width="30" /></a></td>
<td><p class="head2"><a id="programming.procedural">Procedural Programming Model</a></p></td>
</tr>
</tbody>
</table>

<div class="faqdescription">Tasks are treated as step-by-step iterations where common tasks are placed in functions that are called as needed. This coding style favors iteration, sequencing, selection, and modularization.<br>
Python excels in implementing this particular paradigm.</div>

<div class="elementheader">Reference</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials on YouTube</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>

<ol>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
</ol>

<div class="propertyheader"></div>
<div class="propertydescription"></div>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<hr />
<p></p>
<p></p>

<table summary="">
<tbody>
<tr>
<td>
<p></p><p></p>
<a href="#top"><img height="40" alt="Go to the Top" src="images/UpArrow.jpg" width="30" /></a></td>
<td><p class="head2"><a id="programming.imperative">Imperative Programming Model</a></p></td>
</tr>
</tbody>
</table>

<div class="faqdescription">Computation is performed as a direct change to program state. This style is especially useful when manipulating data structures and produces elegant yet simple code.<br>
Python fully implements this paradigm.</div>

<div class="elementheader">Reference</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials on YouTube</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>

<ol>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
</ol>

<div class="propertyheader"></div>
<div class="propertydescription"></div>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<hr />
<table summary="">
<tbody>
<tr><p></p><p></p>
<td><a href="#top"><img height="40" alt="Go to the Top" src="images/UpArrow.jpg" width="30" /></a></td>
<td><p class="head2"><a id="blogs">Python Blogs</a></p></td>
</tr>
</tbody>
</table>

<div class="elementdescription"></div>

<ol>
<li>
<a class="listitem" href="https://talkpython.fm/" target="_blank">Talk Python to Me</a>
 - <span class="update"></span>
</li>
<li>
<a class="listitem" href="https://pythonbytes.fm/" target="_blank">Python Bytes</a>
 - <span class="update"></span>
</li>
<li>
<a class="listitem" href="https://podcastinit.com/" target="_blank">Podcast.__init__</a>
 - <span class="update"></span>
</li>
<li>
<a class="listitem" href="http://www.testandcode.com" target="_blank">Test and Code</a>
 - <span class="update"></span>
</li>
<li>
<a class="listitem" href="https://doughellmann.com/blog/the-python-3-standard-library-by-example/" target="_blank">Doug Hellman PyMOTW</a>
 - <span class="update"></span>
</li>
</ol>
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<hr />
<p></p>
<p></p>

<table summary="">
<tbody>
<tr>
<td>
<p></p><p></p>
<a href="#top"><img height="40" alt="Go to the Top" src="images/UpArrow.jpg" width="30" /></a></td>
<td><p class="head2"><a id="python.forum">Python Forum formats</a></p></td>
</tr>
</tbody>
</table>

<div class="elementdescription"></div>

<div class="elementheader">Reference</div>
<div class="elementdescription">
| <a href="" target="_blank">l</a>
| <a href="" target="_blank">l</a>
|</div>
<p></p>
<div class="elementheader">Tutorials on YouTube</div>
<div class="elementdescription">
| <a href="" target="_blank">l</a>
| <a href="" target="_blank">l</a>
|</div>
<p></p>
<div class="elementheader">Tutorials</div>
<div class="elementdescription">
| <a href="" target="_blank">l</a>
| <a href="" target="_blank">l</a>
|</div>
<p></p>

<ol>
<li>
<a class="listitem" href="https://python-forum.io/misc.php?action=help&hid=25" target="_blank">BBCode: Code Tag Usage</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="https://python-forum.io/misc.php?action=help&hid=19" target="_blank"> How to ask Smart QuestionsM</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="https://python-forum.io/misc.php?action=help" target="_blank">Help Documents</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="https://python-forum.io/Forum-Tutorials?sortby=&prefix=19" target="_blank">The Basics: Tutorials</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="https://python-forum.io/Forum-Tutorials?sortby=lastpost&order=desc&datecut=9999&prefix=22" target="_blank">Classes</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="https://python-forum.io/Thread-Basic-Python-Gotchas" target="_blank">Python Forum Gotchas</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
</ol>

<div class="propertyheader">H</div>
<div class="propertydescription"></div>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>
<hr />
<p></p>
<p></p>

<table summary="">
<tbody>
<tr>
<td>
<p></p><p></p>
<a href="#top"><img height="40" alt="Go to the Top" src="images/UpArrow.jpg" width="30" /></a></td>
<td><p class="head2"><a id="python.micro">Micro Python</a></p></td>
</tr>
</tbody>
</table>

<div class="faqdescription"></div>

<div class="elementheader">Reference</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials on YouTube</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>
<div class="elementheader">Tutorials</div>
<div class="elementdescription">
| <a href="" target="_blank">x</a>
| <a href="" target="_blank">x</a>
|</div>
<p></p>

<ol>
<li>
<a class="listitem" href="https://realpython.com/micropython/" target="_blank">MicroPython: An Intro to Programming Hardware in Python</a>
 - <span class="update">(published 09 Dec 19)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
<li>
<a class="listitem" href="" target="_blank">M</a>
 - <span class="update">(visited 20 Jun 18)</span>
</li>
</ol>

<div class="propertyheader"></div>
<div class="propertydescription"></div>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++------------------>

</body>
</html>
